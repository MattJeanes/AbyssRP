function RP:GiveSalary()	for k,v in pairs(player.GetAll()) do		if v:Team()==0 then continue end		hook.Call( "Payday", GAMEMODE, v, RP.Team[v:Team()].salary )		v:SetNWInt("cash", v:GetNWInt("cash") + tonumber(RP.Team[v:Team()].salary))		RP:Notify(v, RP.colors.white, "Payday! You have recieved your pay. ", RP.colors.blue, "$"..tonumber(RP.Team[v:Team()].salary))		v:SavePlayerData()	end	timer.Simple(300,function() self:GiveSalary() end)endRP:GiveSalary()-- Payday hook test!/*hook.Add("Payday", "RPPAYDAYTEST", function(ply, salary)	print("yay recieved")	print("Name: "..ply:Nick())	print("Salary: "..salary)end)*/local meta = FindMetaTable("Player")function meta:SavePlayerData()	self:SetPData("cash", self:GetNWInt("cash",0))	self:SetPData("bank", self:GetNWInt("bank",0))endfunction meta:LoadPlayerData()	self:SetNWInt("cash", self:GetPData("cash",0))	self:SetNWInt("bank", self:GetPData("bank",100))endfunction meta:AddCash(amount)	if not tonumber(amount) then return end;	if tonumber(amount) < 1 then return end	self:SetNWInt("cash", self:GetPData("cash",0) + amount)	self:SavePlayerData()endfunction meta:SetCash(amount)	if not tonumber(amount) then return end;	if tonumber(amount) < 1 then return end	self:SetNWInt("cash", amount)	self:SavePlayerData()endfunction meta:TakeCash(amount)	if not tonumber(amount) then return end;	if tonumber(amount) < 1 then return end	if (self:GetPData("cash") - amount) < -1 then return end 	self:SetNWInt("cash", self:GetPData("cash",0) - amount)	self:SavePlayerData()endfunction meta:AddBank(amount)	if not tonumber(amount) then return end;	if tonumber(amount) < 1 then return end	self:SetNWInt("bank", self:GetNWInt("bank",0) + amount)	self:SavePlayerData()endfunction meta:TakeBank(amount)	if not tonumber(amount) then return end;	if tonumber(amount) < 1 then return end	if (self:GetPData("bank") - amount) < -1 then return end 	self:SetNWInt("bank", self:GetNWInt("bank",0) - amount)	self:SavePlayerData()end